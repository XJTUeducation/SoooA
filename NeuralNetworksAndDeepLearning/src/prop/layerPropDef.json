{

"Base" :
{
    "DESC" : "base layer",
    "PARENT" : "",
    "LEVEL" : 0,
    "LEARN" : false,
    "VARS" :
        [
            ["id", "uint32_t", "0"],
            ["name", "std::string", "\"\""],
            ["input", "std::vector<std::string>", ""],
            ["output", "std::vector<std::string>", ""],
            ["propDown", "std::vector<bool>", ""],
            ["donate", "bool", "false"],
            ["receive", "bool", "false"],
            ["donatorID", "int", "0"],
            ["learnable", "bool", "false"]
        ]
},

"Input":
{
    "DESC" : "input layer",
    "PARENT" : "Base",
    "LEVEL" : 1,
    "LEARN" : false,
    "VARS" :
        [
            ["mean", "std::vector<float>", ""],
            ["scale", "float", "1.0"],
            ["source", "std::string", "\"\""],
            ["sourceType", "std::string", "\"\""],
            ["numTrainPack", "uint32_t", "1"],
            ["numTestPack", "uint32_t", "1"]
        ]
},

"Loss":
{
    "DESC" : "loss layer",
    "PARENT" : "Base",
    "LEVEL" : 1,
    "LEARN" : false,
    "VARS" :
        [
            ["lossWeight", "float", "1.0"],
            ["hasIgnoreLabel", "bool", "false"],
            ["ignoreLabel", "int", "-1"],
            ["hasNormalize", "bool", "false"],
            ["normalize", "bool", "false"],
            ["hasNormalization", "bool", "false"],
            ["normalization", "int", "LossLayer<float>::Valid"]
        ]
},

"Learnable":
{
    "DESC" : "learnable layer",
    "PARENT" : "Base",
    "LEVEL" : 1,
    "LEARN" : false,
    "VARS" :
        []
},

"Conv" : 
{
    "DESC" : "convolution layer",
    "PARENT" : "Learnable",
    "LEVEL" : 2,
    "LEARN" : true,
    "VARS" : 
        [   
            ["filterDimRows", "uint32_t", "0"],
            ["filterDimCols", "uint32_t", "0"],
            ["filterDimChannels", "uint32_t", "0"],
            ["filterDimFilters", "uint32_t", "0"],
            ["filterDimPads", "uint32_t", "0"],
            ["filterDimStrides", "uint32_t", "1"],
            ["weightUpdateParamLRMulti", "float", "1.0"],
            ["weightUpdateParamDecayMulti", "float", "0.0"],
            ["biasUpdateParamLRMulti", "float", "1.0"],
            ["biasUpdateParamDecayMulti", "float", "0.0"],
            ["weightFillerType", "int", "ParamFillerType::Constant"],
            ["weightFillerValue", "float", "0.0"],
            ["biasFillerType", "int", "ParamFillerType::Constant"],
            ["biasFillerValue", "float", "0.0"],
            ["deconv", "bool", "false"],
            ["deconvExtraCell", "int", "0"]
        ]
},

"FullyConnected" :
{
    "DESC" : "fully connected layer",
    "PARENT" : "Learnable",
    "LEVEL" : 2,
    "LEARN" : true,
    "VARS" : 
        [   
            ["nOut", "int", "0"],
            ["pDropOut", "double", "0.0"],
            ["weightUpdateParam", "update_param", "{0.0, 1.0}"],
            ["biasUpdateParam", "update_param", "{0.0, 1.0}"],
            ["weightFiller", "param_filler<float>", "{ParamFillerType::Constant, 0.0}"],
            ["biasFiller", "param_filler<float>", "{ParamFillerType::Constant, 0.0}"],
            ["axis", "bool", "false"]
        ]
},

"ILSVRCInput" :
{
    "DESC" : "ILSVRC input layer",
    "PARENT" : "Input",
    "LEVEL" : 2,
    "LEARN" : false,
    "VARS" : 
        [   
            ["imageDir", "std::string", "\"\""],
            ["resizeImage", "int", "0"],
            ["resizedImageRow", "int", "0"],
            ["resizedImageCol", "int", "0"]
        ]

},

"ALEInput" :
{
    "DESC" : "Atari Learning Environment input layer",
    "PARENT" : "Input",
    "LEVEL" : 2,
    "LEARN" : false,
    "VARS" : []
},

"CelebAInput" :
{
    "DESC" : "CelebA input layer",
    "PARENT" : "Input",
    "LEVEL" : 2,
    "LEARN" : false,
    "VARS" : 
        [
            ["imageDir", "std::string", "\"\""],
            ["cropImage", "bool", "false"],
            ["cropLen", "int", "0"],
            ["resizeImage", "bool", "false"],
            ["resizedImageRow", "int", "0"],
            ["resizedImageCol", "int", "0"]
        ]
},

"KistiInput" :
{
    "DESC" : "KISTI project input layer",
    "PARENT" : "Input",
    "LEVEL" : 2,
    "LEARN" : false,
    "VARS" : 
        [
            ["imageDir", "std::string", "\"\""],
            ["resizedImageRow", "int", "KISTIDATA_DEFAULT_RESIZED_ROW_SIZE"],
            ["resizedImageCol", "int", "KISTIDATA_DEFAULT_RESIZED_COL_SIZE"],
            ["train", "bool", "true"]
        ]
},

"NoiseInput" :
{
    "DESC" : "Noise input layer",
    "PARENT" : "Input",
    "LEVEL" : 2,
    "LEARN" : false,
    "VARS" : 
        [
            ["noiseDepth", "int", "100"],
            ["noiseRangeLow", "double", "-1.0"],
            ["noiseRangeHigh", "double", "1.0"],
            ["useLinearTrans", "bool", "false"],
            ["tranChannels", "int", "1"],
            ["tranRows", "int", "1"],
            ["tranCols", "int", "1"],
            ["tranMean", "double", "0.0"],
            ["tranVariance", "double", "1.0"],
            ["regenerateNoise", "bool", "true"]
        ]
},

"VOCPascalInput" :
{
    "DESC" : "VOC PASCAL input layer",
    "PARENT" : "Input",
    "LEVEL" : 2,
    "LEARN" : false,
    "VARS" : 
        [
            ["imageDir", "std::string", "\"\""],
            ["resizedImageRow", "int", "0"],
            ["resizedImageCol", "int", "0"],
            ["resizeImage", "bool", "false"]
        ]
},

"BatchNorm" :
{
    "DESC" : "batch normalization layer",
    "PARENT" : "Learnable",
    "LEVEL" : 2,
    "LEARN" : true,
    "VARS" : 
        [   
            ["epsilon", "double", "0.00001"],
            ["train", "bool", "true"]
        ]

},

"SoftmaxWithLoss" :
{
    "DESC" : "softmax with loss layer",
    "PARENT" : "Loss",
    "LEVEL" : 2,
    "LEARN" : false,
    "VARS" :
        [
            ["softmaxAxis", "uint32_t", "2"]
        ]
},

"CrossEntropyWithLoss" :
{
    "DESC" : "crosss entropy with loss layer",
    "PARENT" : "Loss",
    "LEVEL" : 2,
    "LEARN" : false,
    "VARS" :
        [
            ["targetValue", "float", "0.0"],
            ["withSigmoid", "bool", "false"]
        ]
},

"YOLOLoss" :
{
    "DESC" : "YOLO loss layer",
    "PARENT" : "Loss",
    "LEVEL" : 2,
    "LEARN" : false,
    "VARS" :
        [
            ["noobj", "float", "0.5"],
            ["coord", "float", "5.0"]
        ]
},

"Split" :
{
    "DESC" : "split layer",
    "PARENT" : "Base",
    "LEVEL" : 1,
    "LEARN" : false,
    "VARS" :
        [
        ]
},

"Relu" :
{
    "DESC" : "relu layer",
    "PARENT" : "Base",
    "LEVEL" : 1,
    "LEARN" : false,
    "VARS" :
        [
            ["useLeaky", "bool", "false"],
            ["leaky", "double", "0.0"]
        ]
},

"Sigmoid2" :
{
    "DESC" : "sigmoid 2 layer",
    "PARENT" : "Base",
    "LEVEL" : 1,
    "LEARN" : false,
    "VARS" : []
},

"DropOut" : 
{
    "DESC" : "dropout layer",
    "PARENT" : "Base",
    "LEVEL" : 1,
    "LEARN" : false,
    "VARS" :
        [
            ["probability", "double", "0.5"],
            ["scale", "double", "0.0"]
        ]

},

"HyperTangent" : 
{
    "DESC" : "hyper tangent layer",
    "PARENT" : "Base",
    "LEVEL" : 1,
    "LEARN" : false,
    "VARS" : []
},

"DepthConcat" : 
{
    "DESC" : "depth concat layer",
    "PARENT" : "Base",
    "LEVEL" : 1,
    "LEARN" : false,
    "VARS" : []
},

"DummyInput" : 
{
    "DESC" : "dummy input layer",
    "PARENT" : "Input",
    "LEVEL" : 2,
    "LEARN" : false,
    "VARS" : []
},

"LRN" : 
{
    "DESC" : "lrn layer",
    "PARENT" : "Base",
    "LEVEL" : 1,
    "LEARN" : false,
    "VARS" : 
	[
	    ["localSize", "uint32_t", "5"],
	    ["alpha", "double", "0.0001"],
	    ["beta", "double", "0.75"],
	    ["k", "double", "2.0"]
	]
},

"Pooling" : 
{
    "DESC" : "pooling layer",
    "PARENT" : "Base",
    "LEVEL" : 1,
    "LEARN" : false,
    "VARS" : 
	[
	    ["rows", "uint32_t", "1"],
	    ["cols", "uint32_t", "1"],
	    ["pad", "uint32_t", "0"],
	    ["stride", "uint32_t", "1"],
	    ["poolingType", "int", "PoolingType::Max"]
	]
},

"Reshape" : 
{
    "DESC" : "reshape layer",
    "PARENT" : "Base",
    "LEVEL" : 1,
    "LEARN" : false,
    "VARS" : 
	[
	    ["shape", "std::vector<std::string>", ""],
	    ["axis", "int", "0"],
	    ["numAxis", "int", "-1"]
	]
},

"SmoothL1Loss" : 
{
    "DESC" : "smooth l1 loss layer",
    "PARENT" : "Loss",
    "LEVEL" : 2,
    "LEARN" : false,
    "VARS" : 
	[
	    ["sigma", "float", "1.0"],
	    ["firstAxis", "uint32_t", "0"]
	]
},

"Softmax" : 
{
    "DESC" : "softmax layer",
    "PARENT" : "Base",
    "LEVEL" : 1,
    "LEARN" : false,
    "VARS" : 
	[
	    ["softmaxAxis", "uint32_t", "2"]
	]
},

"AnchorTarget" : 
{
    "DESC" : "anchor target layer",
    "PARENT" : "Base",
    "LEVEL" : 1,
    "LEARN" : false,
    "VARS" : 
	[
	    ["featStride", "uint32_t", "16"],
	    ["allowedBorder", "uint32_t", "0"],
	    ["scales", "std::vector<uint32_t>", "{8, 16, 32},"]
	]
},

"FrcnnTestOutput" : 
{
    "DESC" : "frcnn test output layer",
    "PARENT" : "Base",
    "LEVEL" : 1,
    "LEARN" : false,
    "VARS" : 
	[
	    ["maxPerImage", "uint32_t", "100"],
	    ["thresh", "float", "0.05"],
	    ["vis", "bool", "false"]
	]
},

"Proposal" : 
{
    "DESC" : "proposal layer",
    "PARENT" : "Base",
    "LEVEL" : 1,
    "LEARN" : false,
    "VARS" : 
	[
	    ["featStride", "uint32_t", "16"],
	    ["scales", "std::vector<uint32_t>", "{8, 16, 32},"]
	]
},

"ProposalTarget" : 
{
    "DESC" : "proposal target layer",
    "PARENT" : "Base",
    "LEVEL" : 1,
    "LEARN" : false,
    "VARS" : 
	[
	    ["numClasses", "uint32_t", "0"]
	]
},

"RoIInput" : 
{
    "DESC" : "roi input layer",
    "PARENT" : "Input",
    "LEVEL" : 2,
    "LEARN" : false,
    "VARS" : 
	[
	    ["numClasses", "uint32_t", "0"],
	    ["pixelMeans", "std::vector<float>", ""]
	]
},

"RoIPooling" : 
{
    "DESC" : "roi pooling layer",
    "PARENT" : "Base",
    "LEVEL" : 1,
    "LEARN" : false,
    "VARS" : 
	[
	    ["pooledW", "uint32_t", "6"],
	    ["pooledH", "uint32_t", "6"],
	    ["spatialScale", "float", "0.0625"]
	]
},

"RoITestInput" : 
{
    "DESC" : "roi test input",
    "PARENT" : "Input",
    "LEVEL" : 2,
    "LEARN" : false,
    "VARS" : 
	[
	    ["numClasses", "uint32_t", "0"],
	    ["pixelMeans", "std::vector<float>", ""]
	]
}

}
